{"version":3,"file":"stores-c9aa5989.js","sources":["../../svelte-app/node_modules/svelte/store/index.mjs","../../svelte-app/node_modules/sveltestrap/src/ModalBackdrop.svelte","../../svelte-app/node_modules/sveltestrap/src/ModalBody.svelte","../../svelte-app/node_modules/sveltestrap/src/ModalHeader.svelte","../../svelte-app/node_modules/sveltestrap/src/Modal.svelte","../../svelte-app/src/components/stores.js"],"sourcesContent":["import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","<script>\n  // TODO only allow single backdrop open at once.\n  import { onMount } from 'svelte';\n  import classnames from './utils';\n  import { backdropIn, backdropOut } from './transitions.js';\n\n  let className = '';\n  export { className as class };\n  export let isOpen = false;\n  export let fade = true;\n\n  let loaded = false;\n  onMount(() => {\n    loaded = true;\n  });\n\n  $: classes = classnames(className, 'modal-backdrop');\n</script>\n\n{#if isOpen && loaded}\n  <div\n    role=\"presentation\"\n    {...$$restProps}\n    on:click\n    class={classes}\n    class:fade\n    in:backdropIn\n    out:backdropOut\n  />\n{/if}\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n\n  $: classes = classnames(className, 'modal-body');\n</script>\n\n<div {...$$restProps} class={classes}>\n  <slot />\n</div>\n","<script>\n  import classnames from './utils';\n\n  let className = '';\n  export { className as class };\n  export let toggle = undefined;\n  export let closeAriaLabel = 'Close';\n  export let children = undefined;\n  export let id = undefined;\n\n  $: classes = classnames(className, 'modal-header');\n</script>\n\n<div {...$$restProps} class={classes}>\n  <h5 class=\"modal-title\" {id}>\n    {#if children}\n      {children}\n    {:else}\n      <slot />\n    {/if}\n  </h5>\n  <slot name=\"close\">\n    {#if typeof toggle === 'function'}\n      <button\n        type=\"button\"\n        on:click={toggle}\n        class=\"btn-close\"\n        aria-label={closeAriaLabel}\n      />\n    {/if}\n  </slot>\n</div>\n","<script context=\"module\">\n  // TODO fade option\n  let openCount = 0;\n</script>\n\n<script>\n  import classnames from './utils';\n  import { browserEvent } from './utils';\n  import {\n    createEventDispatcher,\n    onDestroy,\n    onMount,\n    afterUpdate\n  } from 'svelte';\n  import { modalIn, modalOut } from './transitions';\n  import InlineContainer from './InlineContainer.svelte';\n  import ModalBackdrop from './ModalBackdrop.svelte';\n  import ModalBody from './ModalBody.svelte';\n  import ModalHeader from './ModalHeader.svelte';\n  import Portal from './Portal.svelte';\n  import {\n    conditionallyUpdateScrollbar,\n    getOriginalBodyPadding,\n    setScrollbarWidth,\n    uuid\n  } from './utils';\n\n  const dispatch = createEventDispatcher();\n\n  let className = '';\n  let staticModal = false;\n  export { className as class };\n  export { staticModal as static };\n  export let isOpen = false;\n  export let autoFocus = true;\n  export let body = false;\n  export let centered = false;\n  export let container = undefined;\n  export let fullscreen = false;\n  export let header = undefined;\n  export let scrollable = false;\n  export let size = '';\n  export let toggle = undefined;\n  export let labelledBy = header ? `modal-${uuid()}` : undefined;\n  export let backdrop = true;\n  export let wrapClassName = '';\n  export let modalClassName = '';\n  export let contentClassName = '';\n  export let fade = true;\n  export let unmountOnClose = true;\n  export let returnFocusAfterClose = true;\n\n  let hasOpened = false;\n  let _isMounted = false;\n  let _triggeringElement;\n  let _originalBodyPadding;\n  let _lastIsOpen = isOpen;\n  let _lastHasOpened = hasOpened;\n  let _dialog;\n  let _mouseDownElement;\n  let _removeEscListener;\n\n  onMount(() => {\n    if (isOpen) {\n      init();\n      hasOpened = true;\n    }\n\n    if (hasOpened && autoFocus) {\n      setFocus();\n    }\n  });\n\n  onDestroy(() => {\n    destroy();\n    if (hasOpened) {\n      close();\n    }\n  });\n\n  afterUpdate(() => {\n    if (isOpen && !_lastIsOpen) {\n      init();\n      hasOpened = true;\n    }\n\n    if (autoFocus && hasOpened && !_lastHasOpened) {\n      setFocus();\n    }\n\n    _lastIsOpen = isOpen;\n    _lastHasOpened = hasOpened;\n  });\n\n  function setFocus() {\n    if (\n      _dialog &&\n      _dialog.parentNode &&\n      typeof _dialog.parentNode.focus === 'function'\n    ) {\n      _dialog.parentNode.focus();\n    }\n  }\n\n  function init() {\n    try {\n      _triggeringElement = document.activeElement;\n    } catch (err) {\n      _triggeringElement = null;\n    }\n\n    if (!staticModal) {\n      _originalBodyPadding = getOriginalBodyPadding();\n      conditionallyUpdateScrollbar();\n      if (openCount === 0) {\n        document.body.className = classnames(\n          document.body.className,\n          'modal-open'\n        );\n      }\n\n      ++openCount;\n    }\n    _isMounted = true;\n  }\n\n  function manageFocusAfterClose() {\n    if (_triggeringElement) {\n      if (\n        typeof _triggeringElement.focus === 'function' &&\n        returnFocusAfterClose\n      ) {\n        _triggeringElement.focus();\n      }\n\n      _triggeringElement = null;\n    }\n  }\n\n  function destroy() {\n    manageFocusAfterClose();\n  }\n\n  function close() {\n    if (openCount <= 1) {\n      document.body.classList.remove('modal-open');\n    }\n\n    manageFocusAfterClose();\n    openCount = Math.max(0, openCount - 1);\n\n    setScrollbarWidth(_originalBodyPadding);\n  }\n\n  function handleBackdropClick(e) {\n    if (e.target === _mouseDownElement) {\n      if (!isOpen || !backdrop) {\n        return;\n      }\n\n      const backdropElem = _dialog ? _dialog.parentNode : null;\n      if (\n        backdrop === true &&\n        backdropElem &&\n        e.target === backdropElem &&\n        toggle\n      ) {\n        e.stopPropagation();\n        toggle(e);\n      }\n    }\n  }\n\n  function onModalOpened() {\n    dispatch('open');\n    _removeEscListener = browserEvent(document, 'keydown', (event) => {\n      if (event.key && event.key === 'Escape') {\n        if (toggle && backdrop === true) {\n          if (_removeEscListener) _removeEscListener();\n          toggle(event);\n        }\n      }\n    });\n  }\n\n  function onModalClosing() {\n    dispatch('closing');\n    if (_removeEscListener) {\n      _removeEscListener();\n    }\n  }\n\n  function onModalClosed() {\n    dispatch('close');\n    if (unmountOnClose) {\n      destroy();\n    }\n    close();\n    if (_isMounted) {\n      hasOpened = false;\n    }\n    _isMounted = false;\n  }\n\n  function handleBackdropMouseDown(e) {\n    _mouseDownElement = e.target;\n  }\n\n  const dialogBaseClass = 'modal-dialog';\n\n  $: classes = classnames(dialogBaseClass, className, {\n    [`modal-${size}`]: size,\n    'modal-fullscreen': fullscreen === true,\n    [`modal-fullscreen-${fullscreen}-down`]:\n      fullscreen && typeof fullscreen === 'string',\n    [`${dialogBaseClass}-centered`]: centered,\n    [`${dialogBaseClass}-scrollable`]: scrollable\n  });\n\n  $: outer = container === 'inline' || staticModal ? InlineContainer : Portal;\n</script>\n\n{#if _isMounted}\n  <svelte:component this={outer}>\n    <!-- svelte-ignore a11y-click-events-have-key-events -->\n    <div class={wrapClassName} tabindex=\"-1\" {...$$restProps}>\n      {#if isOpen}\n        <!-- svelte-ignore a11y-no-noninteractive-element-interactions -->\n        <div\n          in:modalIn\n          out:modalOut\n          aria-labelledby={labelledBy}\n          class={classnames('modal', modalClassName, {\n            fade,\n            'position-static': staticModal\n          })}\n          role=\"dialog\"\n          on:introstart={() => dispatch('opening')}\n          on:introend={onModalOpened}\n          on:outrostart={onModalClosing}\n          on:outroend={onModalClosed}\n          on:click={handleBackdropClick}\n          on:mousedown={handleBackdropMouseDown}\n        >\n          <slot name=\"external\" />\n          <div class={classes} role=\"document\" bind:this={_dialog}>\n            <div class={classnames('modal-content', contentClassName)}>\n              {#if header}\n                <ModalHeader {toggle} id={labelledBy}>\n                  {header}\n                </ModalHeader>\n              {/if}\n              {#if body}\n                <ModalBody>\n                  <slot />\n                </ModalBody>\n              {:else}\n                <slot />\n              {/if}\n            </div>\n          </div>\n        </div>\n      {/if}\n    </div>\n  </svelte:component>\n{/if}\n{#if backdrop && !staticModal}\n  <svelte:component this={outer}>\n    <ModalBackdrop {fade} {isOpen} />\n  </svelte:component>\n{/if}\n\n<style>\n  :global(.modal-open) {\n    overflow: hidden;\n    padding-right: 0;\n  }\n</style>\n","import { writable } from \"svelte/store\";\n\nexport const registered = writable(false);\nexport const isOpen = writable(false);"],"names":["subscriber_queue","writable","value","start","noop","stop","subscribers","Set","set","new_value","safe_not_equal","run_queue","length","subscriber","push","i","update","fn","subscribe","run","invalidate","add","size","delete","ctx","insert","target","div","anchor","if_block","create_if_block","class","className","$$props","isOpen","fade","loaded","onMount","$$invalidate","classes","classnames","div_levels","button","is_function","apply","this","arguments","append","h5","toggle","closeAriaLabel","children","id","create_if_block_4","div2","div1","div0","create_if_block_2","create_if_block_1","if_block1","openCount","dialogBaseClass","dispatch","createEventDispatcher","_triggeringElement","_originalBodyPadding","_dialog","_mouseDownElement","_removeEscListener","static","staticModal","autoFocus","body","centered","container","fullscreen","header","scrollable","labelledBy","uuid","undefined","backdrop","wrapClassName","modalClassName","contentClassName","unmountOnClose","returnFocusAfterClose","hasOpened","_isMounted","_lastIsOpen","_lastHasOpened","setFocus","parentNode","focus","init","document","activeElement","err","getOriginalBodyPadding","conditionallyUpdateScrollbar","manageFocusAfterClose","destroy","close","classList","remove","Math","max","setScrollbarWidth","onDestroy","afterUpdate","outer","InlineContainer","Portal","e","backdropElem","stopPropagation","browserEvent","event","key","$$value","registered"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}